#property indicator_chart_window
#property indicator_buffers 2
#property indicator_color1 Green
#property indicator_color2 Red
double support[];
double resistance[];

int init() {
    SetIndexBuffer(0, resistance);
    SetIndexBuffer(1, support);

    int i;
    for (i = 0; i < 1000; i++) {
        support[i] = 0.0;
        resistance[i] = 0.0;
    }

    PlotIndicator(0, Bars - 1);
    return(0);
}

int start() {
    PlotIndicator(0, Bars - 1);
    return(0);
}

void PlotIndicator(int start, int end) {
    int i, shift;
    double price;
    for (i = start, shift = Bars - start - 1; i <= end; i++, shift--) {
        if (i == 0) {
            resistance[i] = High[i];
            support[i] = Low[i];
        } else {
            resistance[i] = MathMax(High[i], resistance[i-1]);
            support[i] = MathMin(Low[i], support[i-1]);
        }

        if (resistance[i] != 0.0) {
            price = resistance[i];
            if (i == 0) {
                ObjectCreate("resistance", OBJ_HLINE, 0, Time[shift], price);
            } else if (resistance[i-1] == 0.0) {
                ObjectCreate("resistance", OBJ_HLINE, 0, Time[shift], price);
            } else {
                ObjectMove("resistance", 0, Time[shift], price);
            }
            PlotIndexSetDouble(0, i, price);
        }

        if (support[i] != 0.0) {
            price = support[i];
            if (i == 0) {
                ObjectCreate("support", OBJ_HLINE, 0, Time[shift], price);
            } else if (support[i-1] == 0.0) {
                ObjectCreate("support", OBJ_HLINE, 0, Time[shift], price);
            } else {
                ObjectMove("support", 0, Time[shift], price);
            }
            PlotIndexSetDouble(1, i, price);
        }
    }
}
